sudo: false
services:
  - mongodb
  - redis
  - rethinkdb

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
 - CABALVER=1.18 GHCVER=7.8.2
 - CABALVER=1.18 GHCVER=7.8.3
 - CABALVER=1.18 GHCVER=7.8.4
 - CABALVER=1.22 GHCVER=7.10.1
 - CABALVER=1.22 GHCVER=7.10.2

# Note: the distinction between `before_install` and `install` is not important.
before_install:
 - travis_retry add-apt-repository -y ppa:hvr/ghc
 - travis_retry apt-get update
 - travis_retry apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install wheb-base/Wheb.cabal --enable-tests --enable-benchmarks
 - cabal install plugins/wheb-strapped/wheb-strapped.cabal --enable-tests
 - cabal install plugins/wheb-redis/wheb-redis.cabal --enable-tests
 - cabal install plugins/wheb-mongo/wheb-mongo.cabal --enable-tests
 - cabal install blaze-html
 - cabal install web-routes-boomerang
 - |
    if [ $GHCVER = "head" ] || [ ${GHCVER%.*} = "7.8" ] || [ ${GHCVER%.*} = "7.10" ]; then
      travis_retry apt-get install happy-1.19.4 alex-3.1.3
      export PATH=/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH
    else
      travis_retry apt-get install happy alex
    fi

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cd wheb-base
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated
 - cd ..
 - ghc -c examples/Blaze.hs
 - ghc -c examples/File.hs
 - ghc -c examples/Main.hs
 - ghc -c examples/Minimal.hs
 - ghc -c examples/Mongo.hs
 - ghc -c examples/Routes.hs
 - ghc -c examples/Stateful.hs
 - ghc -c examples/WebRoutes.hs
 - ghc -c examples/WebSockets.hs
 - ghc -c examples/Redis.hs
 - cd plugins/wheb-mongo
 - cabal configure --enable-tests
 - cabal build
 - cabal test
 - cd ../..
 - cd plugins/wheb-redis
 - cabal configure --enable-tests
 - cabal build
 - cabal test
 - cd ../..
 - cd plugins/wheb-rethinkdb
 - cabal configure --enable-tests
 - cabal build
 - cabal test
 - cd ../..

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
 - cd wheb-base
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
